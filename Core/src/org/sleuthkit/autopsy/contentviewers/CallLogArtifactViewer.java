/*
 * Autopsy Forensic Browser
 *
 * Copyright 2020 Basis Technology Corp.
 * Contact: carrier <at> sleuthkit <dot> org
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.sleuthkit.autopsy.contentviewers;

import java.awt.Component;
import java.text.SimpleDateFormat;
import java.util.Collection;
import java.util.Locale;
import java.util.logging.Level;
import javax.swing.JScrollPane;
import org.sleuthkit.autopsy.coreutils.Logger;
import org.sleuthkit.autopsy.datamodel.ContentUtils;
import org.sleuthkit.datamodel.BlackboardArtifact;
import org.sleuthkit.datamodel.BlackboardAttribute;
import org.sleuthkit.datamodel.Content;
import org.sleuthkit.datamodel.DataSource;
import org.sleuthkit.datamodel.TskCoreException;

/**
 * This is a viewer for TSK_CALLLOG artifacts.
 * 
 * 
 */
public class CallLogArtifactViewer extends javax.swing.JPanel implements ArtifactContentViewer {

    private final SimpleDateFormat dateFormatter = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss", Locale.US);
    
    private final static Logger logger = Logger.getLogger(CallLogArtifactViewer.class.getName());
    private static final long serialVersionUID = 1L;

    
    /**
     * Creates new form CalllogArtifactViewer
     */
    public CallLogArtifactViewer() {
        initComponents();
        customizeComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        callDetailsPanel = new javax.swing.JPanel();
        toOrFromNumberLabel = new javax.swing.JLabel();
        personaButton1 = new javax.swing.JButton();
        toOrFromNameLabel = new javax.swing.JLabel();
        directionLabel = new javax.swing.JLabel();
        dateTimeLabel = new javax.swing.JLabel();
        durationLabel = new javax.swing.JLabel();
        otherParticipantsPanel = new javax.swing.JPanel();
        otherParticipantsListPanel = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        otherParticipantsLabel = new javax.swing.JLabel();
        bottomPanel = new javax.swing.JPanel();
        otherAttributesPanel = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        otherAttributesListPanel = new javax.swing.JPanel();
        localAccountInfoPanel = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        dataSourceNameLabel = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        deviceIdLabel = new javax.swing.JLabel();
        localAccountLabel = new javax.swing.JLabel();
        localAccountIdLabel = new javax.swing.JLabel();

        setLayout(new java.awt.BorderLayout());

        callDetailsPanel.setPreferredSize(new java.awt.Dimension(400, 150));

        toOrFromNumberLabel.setFont(toOrFromNumberLabel.getFont().deriveFont(toOrFromNumberLabel.getFont().getSize()+2f));
        org.openide.awt.Mnemonics.setLocalizedText(toOrFromNumberLabel, org.openide.util.NbBundle.getMessage(CallLogArtifactViewer.class, "CallLogArtifactViewer.toOrFromNumberLabel.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(personaButton1, org.openide.util.NbBundle.getMessage(CallLogArtifactViewer.class, "CallLogArtifactViewer.personaButton1.text")); // NOI18N
        personaButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                personaButton1ActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(toOrFromNameLabel, org.openide.util.NbBundle.getMessage(CallLogArtifactViewer.class, "CallLogArtifactViewer.toOrFromNameLabel.text")); // NOI18N
        toOrFromNameLabel.setEnabled(false);

        directionLabel.setFont(directionLabel.getFont());
        org.openide.awt.Mnemonics.setLocalizedText(directionLabel, org.openide.util.NbBundle.getMessage(CallLogArtifactViewer.class, "CallLogArtifactViewer.directionLabel.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(dateTimeLabel, org.openide.util.NbBundle.getMessage(CallLogArtifactViewer.class, "CallLogArtifactViewer.dateTimeLabel.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(durationLabel, org.openide.util.NbBundle.getMessage(CallLogArtifactViewer.class, "CallLogArtifactViewer.durationLabel.text")); // NOI18N

        javax.swing.GroupLayout callDetailsPanelLayout = new javax.swing.GroupLayout(callDetailsPanel);
        callDetailsPanel.setLayout(callDetailsPanelLayout);
        callDetailsPanelLayout.setHorizontalGroup(
            callDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(callDetailsPanelLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(callDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(directionLabel)
                    .addGroup(callDetailsPanelLayout.createSequentialGroup()
                        .addGroup(callDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(toOrFromNumberLabel)
                            .addGroup(callDetailsPanelLayout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(toOrFromNameLabel)))
                        .addGap(18, 18, 18)
                        .addComponent(personaButton1))
                    .addGroup(callDetailsPanelLayout.createSequentialGroup()
                        .addComponent(dateTimeLabel)
                        .addGap(18, 18, 18)
                        .addComponent(durationLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(199, Short.MAX_VALUE))
        );
        callDetailsPanelLayout.setVerticalGroup(
            callDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(callDetailsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(callDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(callDetailsPanelLayout.createSequentialGroup()
                        .addGroup(callDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(toOrFromNumberLabel)
                            .addComponent(personaButton1))
                        .addGap(28, 28, 28))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, callDetailsPanelLayout.createSequentialGroup()
                        .addComponent(toOrFromNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)))
                .addGroup(callDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dateTimeLabel)
                    .addComponent(durationLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(directionLabel)
                .addContainerGap(40, Short.MAX_VALUE))
        );

        add(callDetailsPanel, java.awt.BorderLayout.PAGE_START);

        otherParticipantsPanel.setLayout(new java.awt.BorderLayout());

        org.openide.awt.Mnemonics.setLocalizedText(jLabel8, org.openide.util.NbBundle.getMessage(CallLogArtifactViewer.class, "CallLogArtifactViewer.jLabel8.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jButton2, org.openide.util.NbBundle.getMessage(CallLogArtifactViewer.class, "CallLogArtifactViewer.jButton2.text")); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jLabel9, org.openide.util.NbBundle.getMessage(CallLogArtifactViewer.class, "CallLogArtifactViewer.jLabel9.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jButton3, org.openide.util.NbBundle.getMessage(CallLogArtifactViewer.class, "CallLogArtifactViewer.jButton3.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(otherParticipantsLabel, org.openide.util.NbBundle.getMessage(CallLogArtifactViewer.class, "CallLogArtifactViewer.otherParticipantsLabel.text")); // NOI18N

        javax.swing.GroupLayout otherParticipantsListPanelLayout = new javax.swing.GroupLayout(otherParticipantsListPanel);
        otherParticipantsListPanel.setLayout(otherParticipantsListPanelLayout);
        otherParticipantsListPanelLayout.setHorizontalGroup(
            otherParticipantsListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(otherParticipantsListPanelLayout.createSequentialGroup()
                .addGroup(otherParticipantsListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(otherParticipantsListPanelLayout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addGroup(otherParticipantsListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9))
                        .addGap(37, 37, 37)
                        .addGroup(otherParticipantsListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton3)
                            .addComponent(jButton2)))
                    .addGroup(otherParticipantsListPanelLayout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(otherParticipantsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 378, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        otherParticipantsListPanelLayout.setVerticalGroup(
            otherParticipantsListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(otherParticipantsListPanelLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(otherParticipantsLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(otherParticipantsListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 80, Short.MAX_VALUE)
                .addGroup(otherParticipantsListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jButton3))
                .addContainerGap())
        );

        otherParticipantsPanel.add(otherParticipantsListPanel, java.awt.BorderLayout.CENTER);

        add(otherParticipantsPanel, java.awt.BorderLayout.CENTER);

        bottomPanel.setLayout(new java.awt.BorderLayout());

        org.openide.awt.Mnemonics.setLocalizedText(jLabel3, org.openide.util.NbBundle.getMessage(CallLogArtifactViewer.class, "CallLogArtifactViewer.jLabel3.text")); // NOI18N

        javax.swing.GroupLayout otherAttributesListPanelLayout = new javax.swing.GroupLayout(otherAttributesListPanel);
        otherAttributesListPanel.setLayout(otherAttributesListPanelLayout);
        otherAttributesListPanelLayout.setHorizontalGroup(
            otherAttributesListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 413, Short.MAX_VALUE)
        );
        otherAttributesListPanelLayout.setVerticalGroup(
            otherAttributesListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 88, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout otherAttributesPanelLayout = new javax.swing.GroupLayout(otherAttributesPanel);
        otherAttributesPanel.setLayout(otherAttributesPanelLayout);
        otherAttributesPanelLayout.setHorizontalGroup(
            otherAttributesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(otherAttributesPanelLayout.createSequentialGroup()
                .addGroup(otherAttributesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(otherAttributesListPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(otherAttributesPanelLayout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 367, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(12, 12, 12))
        );
        otherAttributesPanelLayout.setVerticalGroup(
            otherAttributesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(otherAttributesPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(otherAttributesListPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        bottomPanel.add(otherAttributesPanel, java.awt.BorderLayout.PAGE_START);

        org.openide.awt.Mnemonics.setLocalizedText(jLabel4, org.openide.util.NbBundle.getMessage(CallLogArtifactViewer.class, "CallLogArtifactViewer.jLabel4.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(dataSourceNameLabel, org.openide.util.NbBundle.getMessage(CallLogArtifactViewer.class, "CallLogArtifactViewer.dataSourceNameLabel.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel2, org.openide.util.NbBundle.getMessage(CallLogArtifactViewer.class, "CallLogArtifactViewer.jLabel2.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(deviceIdLabel, org.openide.util.NbBundle.getMessage(CallLogArtifactViewer.class, "CallLogArtifactViewer.deviceIdLabel.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(localAccountLabel, org.openide.util.NbBundle.getMessage(CallLogArtifactViewer.class, "CallLogArtifactViewer.localAccountLabel.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(localAccountIdLabel, org.openide.util.NbBundle.getMessage(CallLogArtifactViewer.class, "CallLogArtifactViewer.localAccountIdLabel.text")); // NOI18N

        javax.swing.GroupLayout localAccountInfoPanelLayout = new javax.swing.GroupLayout(localAccountInfoPanel);
        localAccountInfoPanel.setLayout(localAccountInfoPanelLayout);
        localAccountInfoPanelLayout.setHorizontalGroup(
            localAccountInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(localAccountInfoPanelLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(localAccountInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel2)
                    .addComponent(localAccountLabel))
                .addGap(18, 18, 18)
                .addGroup(localAccountInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(localAccountIdLabel)
                    .addGroup(localAccountInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(dataSourceNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                        .addComponent(deviceIdLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(152, Short.MAX_VALUE))
        );
        localAccountInfoPanelLayout.setVerticalGroup(
            localAccountInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(localAccountInfoPanelLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(localAccountInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(localAccountLabel)
                    .addComponent(localAccountIdLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(localAccountInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(dataSourceNameLabel)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(localAccountInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(deviceIdLabel))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        bottomPanel.add(localAccountInfoPanel, java.awt.BorderLayout.PAGE_END);

        add(bottomPanel, java.awt.BorderLayout.PAGE_END);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void personaButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_personaButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_personaButton1ActionPerformed


    private void customizeComponents() {
        // disable the name label for now.
        this.toOrFromNameLabel.setEnabled(false);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel bottomPanel;
    private javax.swing.JPanel callDetailsPanel;
    private javax.swing.JLabel dataSourceNameLabel;
    private javax.swing.JLabel dateTimeLabel;
    private javax.swing.JLabel deviceIdLabel;
    private javax.swing.JLabel directionLabel;
    private javax.swing.JLabel durationLabel;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel localAccountIdLabel;
    private javax.swing.JPanel localAccountInfoPanel;
    private javax.swing.JLabel localAccountLabel;
    private javax.swing.JPanel otherAttributesListPanel;
    private javax.swing.JPanel otherAttributesPanel;
    private javax.swing.JLabel otherParticipantsLabel;
    private javax.swing.JPanel otherParticipantsListPanel;
    private javax.swing.JPanel otherParticipantsPanel;
    private javax.swing.JButton personaButton1;
    private javax.swing.JLabel toOrFromNameLabel;
    private javax.swing.JLabel toOrFromNumberLabel;
    // End of variables declaration//GEN-END:variables

    private class CallLogViewData {

        String number;
        String name = null;
        String direction;
        //String mediaType = null;
        String dateTimeStr = null;
        String duration = null;
        Collection<String> otherParticipants = null;
        String dataSourceName = null;
        String dataSourceDeviceId = null;
        String localAccountId = null;

        
        
       
       

        CallLogViewData(String number) {
           this(number, null);
        }
        CallLogViewData(String number, String direction) {
            this.number = number;
            this.direction = direction;
        }
        
        String getNumber() {
            return number;
        }

        void setNumber(String number) {
            this.number = number;
        }

        String getName() {
            return name;
        }

        void setName(String name) {
            this.name = name;
        }

        String getDirection() {
            return direction;
        }

        void setDirection(String direction) {
            this.direction = direction;
        }

        String getDataSourceName() {
            return dataSourceName;
        }

        void setDataSourceName(String dataSourceName) {
            this.dataSourceName = dataSourceName;
        }

        String getDataSourceDeviceId() {
            return dataSourceDeviceId;
        }

        void setDataSourceDeviceId(String dataSourceDeviceId) {
            this.dataSourceDeviceId = dataSourceDeviceId;
        }

        String getDateTimeStr() {
            return dateTimeStr;
        }

        void setDateTimeStr(String dateTimeStr) {
            this.dateTimeStr = dateTimeStr;
        }

        String getDuration() {
            return duration;
        }

        void setDuration(String duration) {
            this.duration = duration;
        }

        Collection<String> getOtherParticipants() {
            return otherParticipants;
        }

        void setOtherParticipants(Collection<String> otherParticipants) {
            otherParticipants = otherParticipants;
        }
    
        public String getLocalAccountId() {
            return localAccountId;
        }

        public void setLocalAccountId(String localAccountId) {
            this.localAccountId = localAccountId;
        }
        
    }
    
    @Override
    public void setArtifact(BlackboardArtifact artifact) {
        
        this.removeAll();
        this.initComponents();
        this.customizeComponents();
        
        CallLogViewData callLogViewData = null;
        
        try {
            callLogViewData= getCallLogViewData(artifact);
   
        }
        catch (TskCoreException ex) {
            logger.log(Level.SEVERE, String.format("Error getting attributes for Calllog artifact (artifact_id=%d, obj_id=%d)", artifact.getArtifactID(), artifact.getObjectID()), ex);
        }
        
        if (callLogViewData != null) {
        
            this.toOrFromNumberLabel.setText(callLogViewData.getNumber());
            
            // TBD: wire up the Persona button to search/add this Persona....
            
            if (callLogViewData.getDirection() != null) {
                 this.directionLabel.setText(callLogViewData.getDirection());
            } else {
                this.directionLabel.setVisible(false);
            }
            
            if (callLogViewData.getDateTimeStr() != null) {
                this.dateTimeLabel.setText(callLogViewData.getDateTimeStr());
                if (callLogViewData.getDuration() != null) {
                    this.durationLabel.setText(callLogViewData.getDuration());
                } else {
                    this.durationLabel.setVisible(false);
                }
            } else {
                this.dateTimeLabel.setVisible(false);
                this.durationLabel.setVisible(false);
            }
            
            if (callLogViewData.getOtherParticipants() != null) {
                // TBD: popluate lower panel
                // TBD: updateOtherParticipantsPanel(TBD) }
            } else {
                this.remove(this.otherParticipantsPanel);
            }
            
            
            // TBD: Populate other attributs panel
            this.remove(this.otherAttributesPanel);
            
            // populate local account and data source
            if (callLogViewData.getLocalAccountId() != null) {
                this.localAccountIdLabel.setText(callLogViewData.getLocalAccountId());
            } else {
                this.localAccountLabel.setVisible(false);
                this.localAccountIdLabel.setVisible(false);
            }
            if (callLogViewData.getDataSourceName() != null) {
                this.dataSourceNameLabel.setText(callLogViewData.getDataSourceName());
            }
            if (callLogViewData.getDataSourceDeviceId() != null) {
                this.deviceIdLabel.setText(callLogViewData.getDataSourceDeviceId());
            }
            
        }
        
      
        // repaint
        this.revalidate();
    }

    @Override
    public Component getComponent() {
       return new JScrollPane(this, JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED, JScrollPane.HORIZONTAL_SCROLLBAR_NEVER);
    }

    @Override
    public boolean isSupported(BlackboardArtifact artifact) {
        return artifact.getArtifactTypeID() == BlackboardArtifact.ARTIFACT_TYPE.TSK_CALLLOG.getTypeID();
    }
    
    private CallLogViewData getCallLogViewData(BlackboardArtifact artifact) throws TskCoreException {

        BlackboardAttribute directionAttr = artifact.getAttribute(new BlackboardAttribute.Type(BlackboardAttribute.ATTRIBUTE_TYPE.TSK_DIRECTION));
        BlackboardAttribute numberAttr = null;
        BlackboardAttribute localAccountAttr = null;

        CallLogViewData callLogViewData = null;
        String direction = null;
        
        if (directionAttr != null) {
            direction = directionAttr.getValueString();
            
            if (direction.equalsIgnoreCase("Incoming")) {
                numberAttr = artifact.getAttribute(new BlackboardAttribute.Type(BlackboardAttribute.ATTRIBUTE_TYPE.TSK_PHONE_NUMBER_FROM));
                localAccountAttr = artifact.getAttribute(new BlackboardAttribute.Type(BlackboardAttribute.ATTRIBUTE_TYPE.TSK_PHONE_NUMBER_TO));
            } else if (direction.equalsIgnoreCase("Outgoing")) {
                numberAttr = artifact.getAttribute(new BlackboardAttribute.Type(BlackboardAttribute.ATTRIBUTE_TYPE.TSK_PHONE_NUMBER_TO));
                localAccountAttr = artifact.getAttribute(new BlackboardAttribute.Type(BlackboardAttribute.ATTRIBUTE_TYPE.TSK_PHONE_NUMBER_FROM));
            } 
            
        }
        if (numberAttr == null) {
            numberAttr = artifact.getAttribute(new BlackboardAttribute.Type(BlackboardAttribute.ATTRIBUTE_TYPE.TSK_PHONE_NUMBER_FROM));
        }

        if (numberAttr == null) {
            numberAttr = artifact.getAttribute(new BlackboardAttribute.Type(BlackboardAttribute.ATTRIBUTE_TYPE.TSK_PHONE_NUMBER_TO));
        }

        if (numberAttr == null) {
            numberAttr = artifact.getAttribute(new BlackboardAttribute.Type(BlackboardAttribute.ATTRIBUTE_TYPE.TSK_PHONE_NUMBER));
        }

        if (numberAttr == null) {
            numberAttr = artifact.getAttribute(new BlackboardAttribute.Type(BlackboardAttribute.ATTRIBUTE_TYPE.TSK_ID));
        }
        
        if (numberAttr != null) {

            callLogViewData = new CallLogViewData(numberAttr.getValueString(), direction);
            
            // TBD: check if it's a list of numbers and and if so, return only the first one. and put the others in otherParticicpants....
            
            // get date, duration,
            BlackboardAttribute startTimeAttr = artifact.getAttribute(new BlackboardAttribute.Type(BlackboardAttribute.ATTRIBUTE_TYPE.TSK_DATETIME_START));
            if (startTimeAttr == null) {
                startTimeAttr = artifact.getAttribute(new BlackboardAttribute.Type(BlackboardAttribute.ATTRIBUTE_TYPE.TSK_DATETIME));
            }
            if (startTimeAttr != null) {
                long startTime = startTimeAttr.getValueLong();
                Content content = artifact.getDataSource();
                if (null != content && 0 != startTime) {
                    dateFormatter.setTimeZone(ContentUtils.getTimeZone(content));
                    callLogViewData.setDateTimeStr(dateFormatter.format(new java.util.Date(startTime * 1000)));
                }
                
                 BlackboardAttribute endTimeAttr = artifact.getAttribute(new BlackboardAttribute.Type(BlackboardAttribute.ATTRIBUTE_TYPE.TSK_DATETIME_END));
                 if (endTimeAttr != null) {
                      long endTime = endTimeAttr.getValueLong();
                      if (endTime > 0) {
                          callLogViewData.setDuration(String.format("%d seconds", (endTime-startTime)));
                      }
                 }
            } 
           
            Content dataSource = artifact.getDataSource();
     
            callLogViewData.setDataSourceName(dataSource.getName());
            String deviceId = ((DataSource) dataSource).getDeviceId();
            callLogViewData.setDataSourceDeviceId(deviceId);
                  
            if (localAccountAttr != null) {
                String attrValue = localAccountAttr.getValueString();
                if (attrValue.equalsIgnoreCase(deviceId) == false && attrValue.contains(",") == false ) {
                    callLogViewData.setLocalAccountId(attrValue);
                }
            }
            
        }

        return callLogViewData;
    }
    
}
