/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.sleuthkit.autopsy.discovery;

import org.sleuthkit.autopsy.centralrepository.datamodel.CentralRepository;

/**
 *
 * @author wschaefer
 */
final class ImageFilterPanel extends AbstractFiltersPanel {

    private static final long serialVersionUID = 1L;
    private static final FileSearchData.FileType FILE_TYPE = FileSearchData.FileType.IMAGE;

    /**
     * Creates new form ImageFilterPanel
     */
    ImageFilterPanel() {
        super();
        initComponents();
        SizeFilterPanel sizeFilterPanel = new SizeFilterPanel(FILE_TYPE);
        int[] sizeIndicesSelected = {1, 2, 3, 4, 5};
        addFilter(sizeFilterPanel, true, sizeIndicesSelected, 0);
        addFilter(new ObjectDetectedFilterPanel(), false, null, 0);
        int[] pastOccurrencesIndices;
        if (!CentralRepository.isEnabled()) {
            pastOccurrencesIndices = new int[]{0};
        } else {
            pastOccurrencesIndices = new int[]{1, 2, 3, 4, 5, 6, 7};
        }
        addFilter(new PastOccurrencesFilterPanel(), true, pastOccurrencesIndices, 0);
        addFilter(new UserCreatedFilterPanel(), false, null, 1);
        addFilter(new HashSetFilterPanel(), false, null, 1);
        addFilter(new InterestingItemsFilterPanel(), false, null, 1);
        addFilter(new DataSourceFilterPanel(), false, null, 1);
        addFilter(new ParentFolderFilterPanel(), false, null, 1);
        addPanelsToScrollPane(imageFiltersSplitPane);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        imageFiltersScrollPane = new javax.swing.JScrollPane();
        imageFiltersPanel = new javax.swing.JPanel();
        imageFiltersSplitPane = new javax.swing.JSplitPane();

        setLayout(new java.awt.BorderLayout());

        imageFiltersPanel.setLayout(new java.awt.BorderLayout());

        imageFiltersSplitPane.setResizeWeight(0.5);
        imageFiltersSplitPane.setToolTipText(org.openide.util.NbBundle.getMessage(ImageFilterPanel.class, "ImageFilterPanel.imageFiltersSplitPane.toolTipText")); // NOI18N
        imageFiltersPanel.add(imageFiltersSplitPane, java.awt.BorderLayout.CENTER);

        imageFiltersScrollPane.setViewportView(imageFiltersPanel);

        add(imageFiltersScrollPane, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    @Override
    FileSearchData.FileType getFileType() {
        return FILE_TYPE;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel imageFiltersPanel;
    private javax.swing.JScrollPane imageFiltersScrollPane;
    private javax.swing.JSplitPane imageFiltersSplitPane;
    // End of variables declaration//GEN-END:variables
}
