/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.sleuthkit.autopsy.discovery;

import java.awt.event.ActionEvent;
import java.util.ArrayList;
import java.util.List;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

/**
 *
 * @author wschaefer
 */
final class ImageFilterPanel extends AbstractFilterPanel {

    private static final long serialVersionUID = 1L;

    private final List<SearchFilterInterface> filters = new ArrayList<>();

    /**
     * Creates new form ImageFilterPanel
     */
    ImageFilterPanel() {
        initComponents();
        initConstraints();
        addSizeFilter();
        addDataSourceFilter();
    }

    private void addDataSourceFilter() {
        DataSourceFilterPanel dataSourceFilter = new DataSourceFilterPanel();
        dataSourceFilter.configurePanel(true, null);
        dataSourceFilter.addListeners(this, new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent evt) {
                if (!evt.getValueIsAdjusting()) {
                    validateFields();
                }
            }
        });
        filters.add(dataSourceFilter);
    }

    private void addSizeFilter() {
        SizeFilterPanel sizeFilter = new SizeFilterPanel(FileSearchData.FileType.IMAGE);
        int[] indicesSelected = {1, 2, 3, 4, 5};
        sizeFilter.configurePanel(true, indicesSelected);
        sizeFilter.addListeners(this, new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent evt) {
                if (!evt.getValueIsAdjusting()) {
                    validateFields();
                }
            }
        });
        filters.add(sizeFilter);
        addToGridBagLayout(sizeFilter.getCheckbox(), null);
        addToGridBagLayout(sizeFilter, null);
        updateLayout();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
    }// </editor-fold>//GEN-END:initComponents


    private void validateFields() {
        String errorString;
        for (SearchFilterInterface filterPanel : filters) {
            errorString = filterPanel.checkForError();
            if (errorString != null) {
                setInvalid(errorString);
                return;
            }
        }
        setValid();
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        validateFields();
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
